version: '3.9'

services:
  postgres:
    container_name: postgres_container
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "0900"
      PGDATA: /data/postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
       - './postgres-data:/var/lib/postgresql/data'
    restart: unless-stopped
  web-ui:
    image: image_schedule_webui
    build: 
      context: ./WebUI
      dockerfile: Dockerfile
    container_name: container_schedule_webui
    ports:
      - "8080:80"
  coreapi:
    image: image_schedule_api 
    container_name: container_schedule_api
    build:
      context: .
      dockerfile: CoreAPI/Dockerfile
    depends_on:
      postgres:
       condition: service_healthy
    ports:
      - "9090:9090"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:9090
